{"id":100,"date":"2013-04-26T13:54:19","date_gmt":"2013-04-26T13:54:19","guid":{"rendered":"http:\/\/libregraphicsmeeting.org\/lgm\/?page_id=100"},"modified":"2013-04-26T13:54:19","modified_gmt":"2013-04-26T13:54:19","slug":"brushpack","status":"publish","type":"page","link":"https:\/\/libregraphicsmeeting.org\/lgm\/specs\/brushpack\/","title":{"rendered":"Brushpack"},"content":{"rendered":"<p><em>from Boudewijn Rempt on April the 16, 2013 11:15, on the Create mailling list<\/em><\/p>\n<p>On the last day of LGM 2013, the mypaint, gimp, tupi and krita people got together, originally to take the first steps towards integrating the MyPaint brush engine in our applications. This quickly led to a discussion centered on how to share mypaint brushpacks between applications, which got generalized into a design session on a bruskpack file format we can share between apps like krita, gimp and mypaint.<\/p>\n<p>Here&#8217;s the proposal :<\/p>\n<h2>Use-cases<\/h2>\n<ul>\n<li>we want a file format that can pack brushes into a single, complete package that artists can share, install and use directly.<\/li>\n<li>users can decide whether to download an e.g. mypaint brushpack and install it for mypaint only, or in a shared location so other applications that can use that brush type can load it as well. Sharing is opt-in.<\/li>\n<\/ul>\n<h2>Installation locations<\/h2>\n<p>Following the create spec:<\/p>\n<p>\/usr\/share\/create\/brushpacks: global location for shared brushpacks. If a distro creates a repo package of a brush pack, it should be installed here.<\/p>\n<p>\/usr\/share\/apps\/$APP\/&#8230;: global location for application-specific brushpacks. Here the brushpacks bundled with an application are stored<\/p>\n<p>$HOME\/$APP_DATA_DIR\/&#8230;: e.g. .kde\/share\/apps\/krita\/<\/p>\n<div id=\":xi\">\n<p><wbr \/>brushpacks: here the user installs brushpacks that she doesn&#8217;t want to share with other applications<\/p>\n<p>$HOME\/.local\/share\/create\/<wbr \/>brushpacks: here the user can install brushpacks they want to share between application.<\/p>\n<p>On windows, the windows equivalents are used, on OSX ditto.<\/p>\n<\/div>\n<div>\n<h2>Brushpack format<\/h2>\n<ul>\n<li>A zip file that is unzipped on installation.<\/li>\n<li>The zipfile contains one or more toplevel directories: every toplevel directory is a brushpack in its own right. The application should use the directory name as a tag or identifier for the brushpack in the gui.<\/li>\n<li>\u00a0the toplevel contains a manifest.xml file that contains author, copyright and license information.<\/li>\n<li>Allowed licenses are :\n<ul>\n<li>proprietary<\/li>\n<li>public domain<\/li>\n<li>CC-BY-*<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h3>Example:<\/h3>\n<p>&lt;?xml version=&#8221;1.0&#8243; encoding=&#8221;UTF-8&#8243;?&gt;<br \/>\n&lt;document-info&gt;<br \/>\n&lt;about&gt;<br \/>\n&lt;title&gt;Oils&lt;\/title&gt;<br \/>\n&lt;description&gt;&lt;\/description&gt;<br \/>\n&lt;date&gt;2013-04-06T17:12:10&lt;\/<wbr \/>date&gt;<br \/>\n&lt;creation-date&gt;2013-02-03T22:<wbr \/>01:18&lt;\/creation-date&gt;<br \/>\n&lt;url&gt;where you would get a new version&lt;\/url&gt;<br \/>\n&lt;license&gt;public domain&lt;\/license&gt;<br \/>\n&lt;\/about&gt;<br \/>\n&lt;author&gt;<br \/>\n&lt;full-name&gt;John Doe&lt;\/full-name&gt;<br \/>\n&lt;url&gt;<a href=\"http:\/\/johndoe.deviantart.com\" target=\"_blank\">http:\/\/johndoe.<wbr \/>deviantart.com<\/a>&lt;\/url&gt;<br \/>\n&lt;email&gt;&lt;\/email&gt;<br \/>\n&lt;\/author&gt;<br \/>\n&lt;\/document-info&gt;<\/p>\n<ul>\n<li>The brushpack directories can contain a tags.xml file that contains tags for the containing brushes, following the gimp tagging format.<\/li>\n<li>A brushpack directory contains all the necessary subfolders following the CREATE spec with the necessary resources to create the brushes. It is up to the application to decide whether to show brush-specific resource (patterns, gradients, brush tips) in the generic gui.<\/li>\n<\/ul>\n<h3>Example:<\/h3>\n<p>deevad.zip for Krita contains<\/p>\n<p>\/manifest.xml<br \/>\n\/deevad\/<br \/>\n\/deevad\/tags.xml<br \/>\n\/deevad\/brushes\/gimp (contains .gbr files)<br \/>\n\/deevad\/patterns (contains patterns for textured brushes)<br \/>\n\/deevad\/gradients\/ (contains gradient color sourcess)<br \/>\n\/deevad\/krita_paintoppresets (contains krita paintop presets)<\/p>\n<p>For gimp, it would be more like:<\/p>\n<p>\/manifest.xml<br \/>\n\/deevad\/<br \/>\n\/deevad\/tags.xml<br \/>\n\/deevad\/brushes\/gimp (contains .gbr files)<br \/>\n\/deevad\/gimp_gdyn<br \/>\n\/deevad\/gim_gtp<\/p>\n<p>For mypaint<br \/>\n\/manifest.xml<br \/>\n\/deevad\/<br \/>\n\/deevad\/tags.xml<br \/>\n\/deevad\/mypaint_myb<\/p>\n<p>Note that we didn&#8217;t decide on a namespace\/naming convention for the kpp, gtp, myb etc directories. It might also be good to fix brushes\/gimp to follow any new convention (since brushes\/gimp can contain abr, gbr, vbr and gih files, at least).<\/p>\n<p>Brushpacks should not be mixed: so no mypaint brushes and gimp brushes in one brushpack.<\/p>\n<h2>Mimetype and extension<\/h2>\n<p>mimetype: application\/x-create-<wbr \/>brushpack+zip<br \/>\nextension: .brushpack<\/p>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>from Boudewijn Rempt on April the 16, 2013 11:15, on the Create mailling list On the last day of LGM 2013, the mypaint, gimp, tupi and krita people got together, originally to take the first steps towards integrating the MyPaint brush engine in our applications. This quickly led to a discussion centered on how to [&hellip;]<\/p>\n","protected":false},"author":4,"featured_media":0,"parent":79,"menu_order":0,"comment_status":"open","ping_status":"open","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/pages\/100"}],"collection":[{"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/comments?post=100"}],"version-history":[{"count":0,"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/pages\/100\/revisions"}],"up":[{"embeddable":true,"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/pages\/79"}],"wp:attachment":[{"href":"https:\/\/libregraphicsmeeting.org\/lgm\/wp-json\/wp\/v2\/media?parent=100"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}